% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MVNYBinaryMiss.R
\name{MVNYBinaryMiss}
\alias{MVNYBinaryMiss}
\title{Bayesian shared parameter model for missing data in EHRs.}
\usage{
MVNYBinaryMiss(K, J, data, regf, imputeResponse, Mvec, modelVisit,
  modelResponse, priors, inits, n.samples, burn, monitor, update,
  modelComparison, sims = FALSE)
}
\arguments{
\item{K}{A scalar for the assumed number of latent classes in the GMMs.}

\item{J}{A scalar for the number of longitudinal outcomes. \code{J} must be greater than 1.}

\item{data}{A data.frame with all analysis variables. The data.frame must include variables named \code{Y1,\dots,YJ} for the longitudinal health outcomes; \code{D} for the visit process; \code{M1,\dots,MJ} for the response process for each health outcome given a clinic visit; and an integer-valued variable for the patient ID of each longitudinal measurement called \code{subjectID}.}

\item{regf}{A list of formulas for the design matrices in each sub-model. The structure is detailed below:

To improve Gibbs sampling properties, the multivariate model for \code{Y1,\dots,YJ} is updated based on a hierarchically-centered parameterisation. As such, the named formulas for the longitudinal health outcomes model are "YRe", which is the random effects design matrix that must include at least a column of 1's for a random intercept; "YObs", which is the observation-level fixed effects design matrix containing covariates that will not be associated with random effects; and, "YSub" which contains the formula for the random effects equations using subject-level covariates. Note that the formulas "YRe", "YObs", and "YSub" must be disjoint in the hierarchically-centered parameterisation.

For the multinomial probit model of latent class membership, the named formula is "LatentClass", containing patient-level covariates that may be associated with probabilty of latent class membership.

If a model for \code{D} is included, then \code{regf} contains named formulas "DObs" and "DRe" for the fixed effects design matrix and the random effects design matrix, respectively. "DRe" contains a subset of the columns of "DObs".

If a model for any of \code{M1,\dots,MJ} is included, then \code{regf} contains named formulas "MObs" and "MRe" for the fixed effects design matrix and the random effects design matrix, respectively. "MRe" contains a subset of the columns of "MObs".

Note that \code{Y1,\dots,YJ} are assumed to have the same design matrices, and the response processes \code{M1,\dots,MJ} are assumed to have the same design matrices.}

\item{imputeResponse}{Logical. If \code{TRUE}, then missing values indicated by the response process given a clinic visit \code{M1,\dots,MJ} are imputed. If \code{FALSE}, then no imputation is conducted. In this case, the analysis dataset will be restricted to records with all \code{Y1,\dots,YJ} observed, and models for the visit process and response process given a clinic visit are not allowed.}

\item{Mvec}{Integer-valued vector indicating which response process given a clinic visit \code{M1,\dots,MJ} will be modeled under a missing not at random mechanism. For example, if the response processes of \code{Y1} and \code{Y2}, which are \code{M1} and \code{M2}, are desired, then \code{Mvec} is \code{c(1,2)}.}

\item{modelVisit}{Logical. If \code{TRUE}, then a model for the visit process \code{D} is implemented.}

\item{modelResponse}{Logical. If \code{TRUE}, then a model for at least one of the response processes given a clinic visit \code{M1,\dots,MJ}, as indicated by \code{Mvec}, is implemented.}

\item{priors}{A nested list of prior parameters. All regression coefficients are assigned a normal prior distribution. All variance-covariances are assigned an inverse Wishart prior distribution. If any parameters are not needed in the model, the element in the list can be set to NULL. The prior distributions are not allowed to vary by latent class. Details are provided in the \code{Details} section.}

\item{inits}{A list of initial values. If any parameters are not needed in the model, the element in the list can be set to NULL. The initial values are allowed to vary by latent class. Details are provided in the \code{Details} section.}

\item{n.samples}{Number of MCMC iterations.}

\item{burn}{Number of MCMC samples to discard as a burn-in.}

\item{monitor}{Logical. If \code{TRUE}, then after the burn-in period finishes, trace plots of the first four regression coefficients associated with \code{regf} formula named "YSub" are displayed and are periodically updated according to the \code{update} parameter.}

\item{update}{A scalar for the interval at which to print the iteration number and running size of the latent classes. If monitor is TRUE, then trace plots will also be updated at this interval.}

\item{modelComparison}{Logical. If \code{TRUE}, then model information criteria are returned, including the BIC and DIC3. In addition the log pseudo-marginal likelihood (LPML) statistic is computed. Model comparison is allowed only under \code{imputeResponse} is \code{TRUE}. See the \code{Details} section.}

\item{sims}{Logical. If \code{TRUE}, then the average class membership probabilities are returned with MCMC samples, and components of an applied analysis are not executed including model comparison, posterior predictive draws of the longitudinal health outcomes, posterior predictive checking, and written text files of imputations of the longitudinal health outcomes.}
}
\value{
Model summaries are printed to the console, including posterior means and 95\% credible intervals, posterior latent class assignment, and model comparison statistics. A label switching diagnostic using Stephen's method from the \code{label.switching} package in \code{R} is printed.
A list of matrices of stored MCMC samples (\code{n.samples-burn}) for unknown parameters, including:
\enumerate{
\item \code{store_delta}: Regression coefficients from the latent class membership model.
\item \code{store_pi}: Posterior probabilities of latent class membership for each subject and latent class.
\item \code{store_priorPi}: Probabilities of latent class membership for each subject and latent class from the multinomial probit model of latent class membership.
\item \code{store_betaObs}: Regression coefficients from the design matrix from formula "YObs" in the longitudinal health outcomes model.
\item \code{store_betaSub}: Regression coefficients from the design matrix from formula "YSub" in the longitudinal health outcomes model.
\item \code{store_Psi}: Variance-covariance of the subject-level random effects in the longitudinal health outcomes model.
\item \code{store_Sigma}: Variance-covariance of the  longitudinal health outcomes model.
\item \code{store_phi}: Regression coefficients from the design matrix from formula "DObs" in the visit process model. If \code{modelVisit = FALSE}, this will be \code{NULL}.
\item \code{store_Omega}: Variance-covariance of the subject-level random effects in the visit process model. If \code{modelVisit = FALSE}, this will be \code{NULL}.
\item \code{store_lambda}: Regression coefficients from the design matrix from formula "MObs" in the response process model. If \code{modelResponse = FALSE}, this will be \code{NULL}.
\item \code{store_Theta}: Variance-covariance of the subject-level random effects in the response process model. If \code{modelResponse = FALSE}, this will be \code{NULL}.
\item \code{store_ame}: Population-averaged regression coefficients in the longitudinal health outcomes model obtained by averaging over the latent class membership probabilities.
\item \code{store_class_weight}: Latent class membership probabilities averaged from the subject-level to the latent class-level. If \code{sims = FALSE}, these will not be returned.
}

If \code{sims = FALSE}, then after burn-in, samples for draws from the posterior predictive distribution, the discrepancy measure for posterior predictive checking, and imputations for the missing longitudinal health outcomes are written to separate comma-separated text files in the working directory.

Draws from the posterior predictive distribution are stored in \code{store_Ydraw.txt}. These are samples of the replicated completed longitudinal health outcomes. See Gelman, A., Mechelen, I. V., Verbeke, G., Heitjan, D.F. and Meulders, M. (2005) Multiple Imputation for Model Checking: Completed-Data Plots with Missing and Latent Data. Biometrics, 61, 74-85. This file is of dimension \code{n.samples - burn} by \code{N}, where \code{N} is the number of observations given a clinic visit (i.e., \code{length(Y)}).

Samples of a measure of discrepancy are stored in \code{store_T_completed.txt}. This file is of dimension \code{n.samples - burn} by \code{2}, where the first column is the discrepancy measure computed using the completed data, and the second column is the discrepancy measure using the replicated completed data. The discrepancy measure is the multivariate mean square error. See \code{?get_discrepancy_plot}.

Samples of the imputations for \code{Y1,\dots,YJ} are written to \code{store_miss_Y1.txt,\dots,\code{store_miss_YJ.txt}}. If a longitudinal health outcome has no missing values, no file is generated.
}
\description{
The model is a Bayesian shared parameter model to handle missing data in \code{J} longitudinal health outcomes collected in electronic health records (EHRs). The sub-models for the longitudinal health outcomes, visit process, and response process given a clinic visit are growth mixture models (GMMs). Longitudinal health outcomes \code{Y1,\dots,YJ} are assumed to follow a multivariate normal distribution. The visit process \code{D} is defined as a binary indicator equal to 1 if patient has a clinic visit and 0 otherwise. To correspond to \code{Y1,\dots,YJ}, \code{M1,\dots,MJ} are binary indicators equal to 1 if a response is observed given a clinic visit and 0 otherwise. The visit process and response process given a visit are modeled using a probit link function. A multinomial probit model is used to model the probability of a subject belonging to a latent class. Conditional on a patient's latent class membership \code{C}, the longitudinal health outcomes, visit process, and response process given a clinic visit are assumed to be independent.
}
\details{
Details are given on the specification of \code{priors} and \code{inits} and on the model comparison analysis.
\describe{
\item{A.	The nested list \code{priors} must contain the information on the prior distributions in the order as given below.}{
\enumerate{
\item Multivariate normal prior distribution on the regression coefficients in the latent class membership model. The list entry is of the form, for example, \code{list(rep(0, m), diag(10, m))}, where \code{m} is the number of regression coefficients. \code{rep(0, m)} assigns a prior mean of 0 to all regression coefficients. A diagonal variance-covariance matrix with variance 10 is assigned.

\item Multivariate normal prior distribution on the regression coefficients in the design matrix specified by \code{regf} named formula "YObs". The list entry is specified in the same way as in the latent class membership model.

\item Multivariate normal prior distribution on the regression coefficients in the design matrix specified by \code{regf} named formula "YSub". The list entry is specified in the same way as in the latent class membership model.

\item Inverse-Wishart prior distribution on the variance-covariance matrix of the subject-level random effects in the longitudinal health outcomes model. The form is, for example, \code{list(diag(0.25, q), q + 2)}, where \code{q} is the number of random effects. The first element is the prior scale matrix of dimension \code{q} by \code{q}, and the second element is the prior degrees of freedom.

\item Inverse-Wishart prior distribution on the variance-covariance matrix of the longitudinal health outcomes \code{Y1,\dots,YJ}. The form is, for example, \code{list(diag(0.25, R), R + 2)}, where \code{R} is the number of longitudinal health outcomes. The first element is the prior scale matrix of dimension \code{R} by \code{R}, and the second element is the prior degrees of freedom.

\item If \code{modelVisit = TRUE}, a multivariate normal prior distribution on the regression coefficients in the design matrix specified by \code{regf} named formula "DObs". The list entry follows the same format as in the latent class membership model. If \code{modelVisit = FALSE}, then use \code{list(NULL)}.

\item If \code{modelVisit = TRUE}, an inverse-Wishart prior distribution on the variance-covariance matrix of the subject-level random effects in the visit process model. The form follows the same format as in the longitudinal health outcomes model. The number of random effects must be the same as in the longitudinal health outcomes model. If \code{modelVisit = FALSE}, then use \code{list(NULL)}.

\item If \code{modelResponse = TRUE}, a multivariate normal prior distribution on the regression coefficients in the design matrix specified by \code{regf} named formula "MObs". The list entry follows the same format as in the latent class membership model. If \code{modelResponse = FALSE}, then use \code{list(NULL)}.

\item If \code{modelResponse = TRUE}, an inverse-Wishart prior distribution on the variance-covariance matrix of the subject-level random effects in the response process model. The form follows the same format as in the longitudinal health outcomes model. The number of random effects must be the same as in the longitudinal health outcomes model. If \code{modelResponse = FALSE}, then use \code{list(NULL)}.
}

An example of the completed list object for specification of the prior distributions is: \code{priors <- list(list(rep(0, m), diag(1, m)), list(rep(0, s), diag(100, s)), list(rep(0, p), Sigma = diag(10000, p)), list(1, 1), list(diag(c(0.5, 0.6), J), (J + 2)), list(rep(0, f), diag(10, f)), list(1, 0.1), list(rep(0, e), diag(10, e)), list(1, 1))}. \code{m} is the number of covariates in the latent class membbership model; \code{s} is the number of covariates in the "YObs" design matrix; \code{p} is the number of covariates in the "YSub" design matrix; \code{f} is the number of covariates in the "DObs" design matrix; and, \code{e} is the number of covariates in the "MObs" design matrix.}

\item{B.	The list \code{inits} must contain the information on initial values for each of the parameters, in the same order as in \code{priors}.}{
\enumerate{
\item Initial values for the regression coefficients in the latent class membership model. The list entry is of the form, for example, \code{matrix(rep(0, m * (K - 1)), nrow = m, ncol = (K - 1))}, where \code{m} is the number of regression coefficients, \code{K} is the assumed number of latent classes.

\item Initial values for the regression coefficients in the design matrix specified by \code{regf} named formula "YObs". The object is a \code{J} element list in which each element is an \code{s} by \code{K} matrix, where \code{s} is the number of regression coefficients and \code{K} is the number of latent classes. An example for \code{J=2} is \code{list(matrix(rnorm(s * K), ncol = K, nrow = s), matrix(rnorm(s * K), ncol = K, nrow = s))}.

\item Initial values for the regression coefficients in the design matrix specified by \code{regf} named formula "YSub". The object is a \code{J} element list in which each element is an \code{p} by \code{q} by \code{K} array, where \code{p} is the number of regression coefficients, \code{q} is the number of random effects, and \code{K} is the number of latent classes. An example for \code{J=2} is \code{list(array(rnorm(p*q*K), dim = c(p, q, K)), array(rnorm(p*q*K), dim = c(p, q, K)))}.

\item Initial values for the variance-covariance matrix of the subject-level random effects in the longitudinal health outcomes model. The object is a \code{J} element list in which each element is an \code{q} by \code{q} by \code{K} array, where \code{q} is the number of random effects, and \code{K} is the number of latent classes. For an example, see the initial values for the regression coefficients in the design matrix specified by \code{regf} named formula "YSub".

\item Initial values on the variance-covariance matrix of the longitudinal health outcomes \code{Y1,\dots,YJ}. The object is a \code{J} by \code{J} by \code{K} array.

\item If \code{modelVisit = TRUE}, initial values on the regression coefficients in the design matrix specified by \code{regf} named formula "DObs". An example is \code{list(matrix(rnorm(f*K), ncol=K, nrow=f))}. If \code{modelVisit = FALSE}, then use \code{list(NULL)}.

\item If \code{modelVisit = TRUE}, initial values on the variance-covariance matrix of the subject-level random effects in the visit process model. The object is an \code{q} by \code{q} by \code{K} array, where \code{q} is the number of random effects, and \code{K} is the number of latent classes. If \code{modelVisit = FALSE}, then use \code{list(NULL)}.

\item If \code{modelResponse = TRUE}, initial values on the regression coefficients in the design matrix specified by \code{regf} named formula "MObs". The object is a list of the same number of elements as \code{Mvec}. The order of the initial values must correspond to \code{Mvec}. For example, if \code{Mvec = c(2)}, then \code{list(matrix(rnorm(e*K), ncol=K, nrow=e))}. If \code{modelResponse = FALSE}, then use \code{list(NULL)}.

\item If \code{modelResponse = TRUE}, initial values on the variance-covariance matrix of the subject-level random effects in the response process model. The object is a list of the same number of elements as \code{Mvec}. The order of the initial values must correspond to \code{Mvec}. An example for \code{Mvec = c(2)} is \code{list(array(diag(0.5, q), dim = c(q, q, K))}. If \code{modelResponse = FALSE}, then use \code{list(NULL)}.}}}
}
\examples{


------------------------------- Load data from the EHRMiss package
data(growth)
names(growth)
dim(growth)
#------------------------------ Model details
### Number of outcomes
J <- 2
### Number of latent classes
K <- 2
#------------------------------- Specify the formulas for the design matrices and put the
formulas in regf
regf <- list(LatentClass = ~ 1 + birthweight,
            YRe = ~ 1,
            YObs = ~ -1 + time,
            YSub = ~ 1,
            DObs = ~ 1 + time,
            DRe = ~ 1,
            MObs = ~ 1 + time,
            MRe = ~ 1)

#----------------------- MCMC preparation
m <- length(all.vars(regf[["LatentClass"]])) + 1
p <- length(all.vars(regf[["YSub"]])) + 1
s <- length(all.vars(regf[["YObs"]]))
f <- length(all.vars(regf[["DObs"]])) + 1
e <- length(all.vars(regf[["MObs"]])) + 1

### Number of random effects, assumed the same for #'all models
q <- length(all.vars(regf[["YRe"]])) + 1

### Prior distributions
priors <- list(list(rep(0, m), diag(1, m)), list #'(rep(0, s), diag(100, s)),
              list(rep(0, p), diag(10000, p)),
              list(1, 1),
              list(diag(c(0.5, 0.6), J), (J + 2 #')),
              list(rep(0, f), diag(100, f)),
              list(1, 1),
              list(rep(0, e), diag(100, e)),
              list(scale = 1, df = 1))

### Initial values
inits <- list(matrix(rep(0, m * (K - 1)), nrow = m #', ncol = (K - 1)),
             list(matrix(rnorm(s*K), ncol = K,   #' nrow = s), matrix(rnorm(s*K), ncol = K,
              nrow = s #')),
             list(array(rnorm(p*q*K), dim = c(p, #'q, K)), array(rnorm(p*q*K), dim = c(p, q, K
             ))),
             list(array(rep(0.4, K), dim = c(q, q
               , K)), array(rep(0.4, K), dim = c
               (q, q, K))),
             array(c(1, 0, 0, 1, 0.5, 0, 0, 0.5), #'dim = c(J, J, K)),
             matrix(rnorm(f*K), ncol = K),
             array(rep(0.5, K), dim = c(q, q, K
             )),
             list(matrix(rnorm(e*K), ncol = K)),
             list(array(rep(0.5, K), dim = c(q, q
             , K))))

#-------------------------- Fit model with MNAR visit process, MNAR response process for Y2

n.samples <- 100
burn <- 50
update <- 10
monitor <- TRUE


### MNAR Visit process
### MNAR response process for Y2
res <- MVNYBinaryMiss(K = K, J = J, data = growth,
 regf = regf, imputeResponse = TRUE,
Mvec = 2, modelVisit = TRUE, modelResponse = TRUE, priors =  priors, inits = inits,
n.samples = n.samples, burn = burn, monitor = monitor, update = update,
modelComparison = TRUE, sims = FALSE)
### Get Bayesian posterior predictive p-value, see ?get_discrepancy_plot
# Set working directory to where discrepancy samples are written
store_T_completed <- read.table("store_T_completed.txt", header = FALSE, sep = ",")
get_discrepancy_plot(store_T_completed)
}
